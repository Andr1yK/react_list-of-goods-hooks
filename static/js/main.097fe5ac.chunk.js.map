{"version":3,"sources":["App.tsx","components/GoodsList.tsx","components/Options.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","extendClassName","className","map","good","Options","length","Array","_","i","value","React","memo","goodsFromServer","App","useState","isReversed","setIsReversed","isVisible","setIsVisible","none","sortBy","setSortBy","minLength","setMinLength","preparedGoods","filter","e","sort","a","b","alphabet","localeCompare","reverse","type","onClick","classNames","name","id","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"kMAmBKA,E,4ECDUC,EAVoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAkBC,EAArB,EAAUC,UAAV,OACjC,oBAAIA,UAAS,oBAAeD,GAA5B,SACGD,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,S,OCLTC,EAA2B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClC,OACE,mCACG,YAAI,IAAIC,MAAMD,IAASH,KAAI,SAACK,EAAGC,GAAJ,OAC1B,wBAAQC,MAAOD,EAAI,EAAnB,SACGA,EAAI,UAOAE,MAAMC,KAAKP,GFZpBQ,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGf,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAML,IA0GegB,EA1GO,WACpB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAASjB,EAAOsB,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCP,mBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAQMC,EAAgB,UAAIZ,GACvBa,QAAO,SAAAC,GAAC,OAAIA,EAAErB,QAAUiB,KAmB3B,OAjBAE,EAAcG,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKvB,EAAOiC,SACV,OAAOF,EAAEG,cAAcF,GAEzB,KAAKhC,EAAOQ,OACV,OAAOuB,EAAEvB,OAASwB,EAAExB,OAEtB,QACE,OAAO,MAITU,GACFS,EAAcQ,UAId,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,oBAEEgB,GACA,wBACEhB,UAAU,SACVgC,KAAK,SACLC,QAAS,kBAAMhB,GAAa,IAH9B,mBASDD,GACC,sBAAKhB,UAAU,kBAAf,UACE,wBACEA,UAAWkC,IAAW,SAAU,CAC9B,iBAAkBpB,IAEpBkB,KAAK,SACLC,QAAS,kBAAMlB,GAAeD,IALhC,qBAUA,wBACEd,UAAWkC,IAAW,SAAU,CAC9B,iBAAkBf,IAAWvB,EAAOiC,WAEtCG,KAAK,SACLC,QAAS,kBAAMb,EAAUxB,EAAOiC,WALlC,iCAUA,wBACE7B,UAAWkC,IAAW,SAAU,CAC9B,iBAAkBf,IAAWvB,EAAOQ,SAEtC4B,KAAK,SACLC,QAAS,kBAAMb,EAAUxB,EAAOQ,SALlC,4BAUA,wBACEJ,UAAU,SACVgC,KAAK,SACLC,QA3EI,WACZlB,GAAc,GACdK,EAAUxB,EAAOsB,MACjBI,EAAa,IAqEP,mBAQA,wBACEtB,UAAU,SACVmC,KAAK,YACLC,GAAG,YACH5B,MAAOa,EACPgB,SAAU,SAACZ,GAAD,OAAOH,GAAcG,EAAEa,OAAO9B,QAL1C,SAOE,cAAC,EAAD,CAASJ,OAAQ,UAMtBY,GACC,cAAC,EAAD,CAAWlB,MAAOyB,EAAevB,UAAU,kBG1HnDuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.097fe5ac.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './App.scss';\nimport GoodsList from './components/GoodsList';\nimport Options from './components/Options';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  alphabet,\n  length,\n}\n\nconst App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.none);\n  const [minLength, setMinLength] = useState(1);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy(SortBy.none);\n    setMinLength(1);\n  };\n\n  const preparedGoods = [...goodsFromServer]\n    .filter(e => e.length >= minLength);\n\n  preparedGoods.sort((a, b) => {\n    switch (sortBy) {\n      case SortBy.alphabet:\n        return a.localeCompare(b);\n\n      case SortBy.length:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Goods</h1>\n\n      {!isVisible && (\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setIsVisible(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {isVisible && (\n        <div className=\"App__controller\">\n          <button\n            className={classNames('button', {\n              'button--active': isReversed,\n            })}\n            type=\"button\"\n            onClick={() => setIsReversed(!isReversed)}\n          >\n            Reverse\n          </button>\n\n          <button\n            className={classNames('button', {\n              'button--active': sortBy === SortBy.alphabet,\n            })}\n            type=\"button\"\n            onClick={() => setSortBy(SortBy.alphabet)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            className={classNames('button', {\n              'button--active': sortBy === SortBy.length,\n            })}\n            type=\"button\"\n            onClick={() => setSortBy(SortBy.length)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n\n          <select\n            className=\"button\"\n            name=\"minLength\"\n            id=\"minLength\"\n            value={minLength}\n            onChange={(e) => setMinLength(+e.target.value)}\n          >\n            <Options length={10} />\n          </select>\n\n        </div>\n      )}\n\n      {isVisible && (\n        <GoodsList goods={preparedGoods} className=\"App__list\" />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n  className: string,\n};\n\nconst GoodsList: React.FC<Props> = ({ goods, className: extendClassName }) => (\n  <ul className={`goodsList ${extendClassName}`}>\n    {goods.map(good => (\n      <li key={good} className=\"goodsList__item\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport default GoodsList;\n","import React from 'react';\n\ntype Props = {\n  length: number,\n};\n\nconst Options: React.FC<Props> = ({ length }) => {\n  return (\n    <>\n      {[...new Array(length)].map((_, i) => (\n        <option value={i + 1}>\n          {i + 1}\n        </option>\n      ))}\n    </>\n  );\n};\n\nexport default React.memo(Options);\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}